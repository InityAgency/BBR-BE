name: Deploy NestJS(Backend) with PNPM to Production EC2

on:
  push:
    branches:
      - production

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: ðŸ“¥ Checkout Repository
        uses: actions/checkout@v4

      - name: ðŸ§¹ Clear PNPM Cache
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: ðŸ“¦ Install PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 'latest'

      - name: ðŸ“¦ Verify PNPM Installation
        run: pnpm --version

      - name: ðŸ“¦ Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: ðŸ”¨ Build NestJS App
        run: pnpm build

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: ./dist/

      - name: ðŸ“¡ Deploy to EC2 via SCP
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY_PROD }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST_PROD }} >> ~/.ssh/known_hosts

          tar -czf dist.tar.gz dist
          scp dist.tar.gz package.json pnpm-lock.yaml ecosystem.config.js ubuntu@${{ secrets.EC2_HOST_PROD }}:/mnt/app/bbr-backend-new/
          ssh -i ~/.ssh/id_rsa ubuntu@${{ secrets.EC2_HOST_PROD }} "cd /mnt/app/bbr-backend-new && tar -xzf dist.tar.gz && rm dist.tar.gz"

      - name: ðŸš€ Restart Application on EC2
        run: |
          ssh -i ~/.ssh/id_rsa ubuntu@${{ secrets.EC2_HOST_PROD }} << 'EOF'
          cd /mnt/app/bbr-backend-new
          pnpm install
          npm rebuild bcrypt
          pm2 reload ecosystem.config.js --env production
          EOF

      - name: Report Status
        if: always()
        uses: ravsamhq/notify-slack-action@v1
        with:
          status: ${{ job.status }}
          notification_title: '[PRODUCTION] - New Release BBR Backend to EC2'
          mention_groups: ''
          footer: '<{run_url}|View Run>'
          message_format: '{emoji} *{workflow}* {status_message} in <{repo_url}|{repo}@{branch}> on <{commit_url}|{commit_sha}>'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.ACTION_MONITORING_SLACK }}
